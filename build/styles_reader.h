#ifndef STYLES_READER_H
#define STYLES_READER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif


typedef const struct Property_table *Property_table_t;
typedef struct Property_table *Property_mutable_table_t;
typedef const flatbuffers_uoffset_t *Property_vec_t;
typedef flatbuffers_uoffset_t *Property_mutable_vec_t;
typedef const struct StaticRule_table *StaticRule_table_t;
typedef struct StaticRule_table *StaticRule_mutable_table_t;
typedef const flatbuffers_uoffset_t *StaticRule_vec_t;
typedef flatbuffers_uoffset_t *StaticRule_mutable_vec_t;
typedef const struct DynamicProperty_table *DynamicProperty_table_t;
typedef struct DynamicProperty_table *DynamicProperty_mutable_table_t;
typedef const flatbuffers_uoffset_t *DynamicProperty_vec_t;
typedef flatbuffers_uoffset_t *DynamicProperty_mutable_vec_t;
typedef const struct DynamicRule_table *DynamicRule_table_t;
typedef struct DynamicRule_table *DynamicRule_mutable_table_t;
typedef const flatbuffers_uoffset_t *DynamicRule_vec_t;
typedef flatbuffers_uoffset_t *DynamicRule_mutable_vec_t;
typedef const struct Styles_table *Styles_table_t;
typedef struct Styles_table *Styles_mutable_table_t;
typedef const flatbuffers_uoffset_t *Styles_vec_t;
typedef flatbuffers_uoffset_t *Styles_mutable_vec_t;
#ifndef Property_file_identifier
#define Property_file_identifier 0
#endif
/* deprecated, use Property_file_identifier */
#ifndef Property_identifier
#define Property_identifier 0
#endif
#define Property_type_hash ((flatbuffers_thash_t)0x5221f9e8)
#define Property_type_identifier "\xe8\xf9\x21\x52"
#ifndef Property_file_extension
#define Property_file_extension "bin"
#endif
#ifndef StaticRule_file_identifier
#define StaticRule_file_identifier 0
#endif
/* deprecated, use StaticRule_file_identifier */
#ifndef StaticRule_identifier
#define StaticRule_identifier 0
#endif
#define StaticRule_type_hash ((flatbuffers_thash_t)0x33854c5)
#define StaticRule_type_identifier "\xc5\x54\x38\x03"
#ifndef StaticRule_file_extension
#define StaticRule_file_extension "bin"
#endif
#ifndef DynamicProperty_file_identifier
#define DynamicProperty_file_identifier 0
#endif
/* deprecated, use DynamicProperty_file_identifier */
#ifndef DynamicProperty_identifier
#define DynamicProperty_identifier 0
#endif
#define DynamicProperty_type_hash ((flatbuffers_thash_t)0x9dec979b)
#define DynamicProperty_type_identifier "\x9b\x97\xec\x9d"
#ifndef DynamicProperty_file_extension
#define DynamicProperty_file_extension "bin"
#endif
#ifndef DynamicRule_file_identifier
#define DynamicRule_file_identifier 0
#endif
/* deprecated, use DynamicRule_file_identifier */
#ifndef DynamicRule_identifier
#define DynamicRule_identifier 0
#endif
#define DynamicRule_type_hash ((flatbuffers_thash_t)0xcb7ea1b8)
#define DynamicRule_type_identifier "\xb8\xa1\x7e\xcb"
#ifndef DynamicRule_file_extension
#define DynamicRule_file_extension "bin"
#endif
#ifndef Styles_file_identifier
#define Styles_file_identifier 0
#endif
/* deprecated, use Styles_file_identifier */
#ifndef Styles_identifier
#define Styles_identifier 0
#endif
#define Styles_type_hash ((flatbuffers_thash_t)0xe4988bdf)
#define Styles_type_identifier "\xdf\x8b\x98\xe4"
#ifndef Styles_file_extension
#define Styles_file_extension "bin"
#endif



struct Property_table { uint8_t unused__; };

static inline size_t Property_vec_len(Property_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Property_table_t Property_vec_at(Property_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Property_table_t, vec, i, 0)
__flatbuffers_table_as_root(Property)

__flatbuffers_define_string_field(0, Property, key, 0)
__flatbuffers_define_find_by_string_field(Property, key)
__flatbuffers_define_table_sort_by_string_field(Property, key)
__flatbuffers_define_default_find_by_string_field(Property, key)
__flatbuffers_define_default_scan_by_string_field(Property, key)
#define Property_vec_sort Property_vec_sort_by_key
__flatbuffers_define_string_field(1, Property, value, 0)

struct StaticRule_table { uint8_t unused__; };

static inline size_t StaticRule_vec_len(StaticRule_vec_t vec)
__flatbuffers_vec_len(vec)
static inline StaticRule_table_t StaticRule_vec_at(StaticRule_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(StaticRule_table_t, vec, i, 0)
__flatbuffers_table_as_root(StaticRule)

__flatbuffers_define_string_field(0, StaticRule, name, 0)
__flatbuffers_define_find_by_string_field(StaticRule, name)
__flatbuffers_define_table_sort_by_string_field(StaticRule, name)
__flatbuffers_define_default_find_by_string_field(StaticRule, name)
__flatbuffers_define_default_scan_by_string_field(StaticRule, name)
#define StaticRule_vec_sort StaticRule_vec_sort_by_name
__flatbuffers_define_vector_field(1, StaticRule, properties, Property_vec_t, 0)

struct DynamicProperty_table { uint8_t unused__; };

static inline size_t DynamicProperty_vec_len(DynamicProperty_vec_t vec)
__flatbuffers_vec_len(vec)
static inline DynamicProperty_table_t DynamicProperty_vec_at(DynamicProperty_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(DynamicProperty_table_t, vec, i, 0)
__flatbuffers_table_as_root(DynamicProperty)

__flatbuffers_define_string_field(0, DynamicProperty, name, 0)
__flatbuffers_define_find_by_string_field(DynamicProperty, name)
__flatbuffers_define_table_sort_by_string_field(DynamicProperty, name)
__flatbuffers_define_default_find_by_string_field(DynamicProperty, name)
__flatbuffers_define_default_scan_by_string_field(DynamicProperty, name)
#define DynamicProperty_vec_sort DynamicProperty_vec_sort_by_name
__flatbuffers_define_vector_field(1, DynamicProperty, properties, Property_vec_t, 0)

struct DynamicRule_table { uint8_t unused__; };

static inline size_t DynamicRule_vec_len(DynamicRule_vec_t vec)
__flatbuffers_vec_len(vec)
static inline DynamicRule_table_t DynamicRule_vec_at(DynamicRule_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(DynamicRule_table_t, vec, i, 0)
__flatbuffers_table_as_root(DynamicRule)

__flatbuffers_define_string_field(0, DynamicRule, prefix, 0)
__flatbuffers_define_find_by_string_field(DynamicRule, prefix)
__flatbuffers_define_table_sort_by_string_field(DynamicRule, prefix)
__flatbuffers_define_default_find_by_string_field(DynamicRule, prefix)
__flatbuffers_define_default_scan_by_string_field(DynamicRule, prefix)
#define DynamicRule_vec_sort DynamicRule_vec_sort_by_prefix
__flatbuffers_define_vector_field(1, DynamicRule, values, flatbuffers_string_vec_t, 0)
__flatbuffers_define_vector_field(2, DynamicRule, properties, DynamicProperty_vec_t, 0)

struct Styles_table { uint8_t unused__; };

static inline size_t Styles_vec_len(Styles_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Styles_table_t Styles_vec_at(Styles_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Styles_table_t, vec, i, 0)
__flatbuffers_table_as_root(Styles)

__flatbuffers_define_vector_field(0, Styles, static_rules, StaticRule_vec_t, 0)
__flatbuffers_define_vector_field(1, Styles, dynamic_rules, DynamicRule_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* STYLES_READER_H */
