#ifndef STYLES_BUILDER_H
#define STYLES_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef STYLES_READER_H
#include "styles_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

static const flatbuffers_voffset_t __Property_required[] = { 0 };
typedef flatbuffers_ref_t Property_ref_t;
static Property_ref_t Property_clone(flatbuffers_builder_t *B, Property_table_t t);
__flatbuffers_build_table(flatbuffers_, Property, 2)

static const flatbuffers_voffset_t __StaticRule_required[] = { 0 };
typedef flatbuffers_ref_t StaticRule_ref_t;
static StaticRule_ref_t StaticRule_clone(flatbuffers_builder_t *B, StaticRule_table_t t);
__flatbuffers_build_table(flatbuffers_, StaticRule, 2)

static const flatbuffers_voffset_t __DynamicProperty_required[] = { 0 };
typedef flatbuffers_ref_t DynamicProperty_ref_t;
static DynamicProperty_ref_t DynamicProperty_clone(flatbuffers_builder_t *B, DynamicProperty_table_t t);
__flatbuffers_build_table(flatbuffers_, DynamicProperty, 2)

static const flatbuffers_voffset_t __DynamicRule_required[] = { 0 };
typedef flatbuffers_ref_t DynamicRule_ref_t;
static DynamicRule_ref_t DynamicRule_clone(flatbuffers_builder_t *B, DynamicRule_table_t t);
__flatbuffers_build_table(flatbuffers_, DynamicRule, 3)

static const flatbuffers_voffset_t __Styles_required[] = { 0 };
typedef flatbuffers_ref_t Styles_ref_t;
static Styles_ref_t Styles_clone(flatbuffers_builder_t *B, Styles_table_t t);
__flatbuffers_build_table(flatbuffers_, Styles, 2)

#define __Property_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1
#define __Property_call_args , v0, v1
static inline Property_ref_t Property_create(flatbuffers_builder_t *B __Property_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Property, Property_file_identifier, Property_type_identifier)

#define __StaticRule_formal_args , flatbuffers_string_ref_t v0, Property_vec_ref_t v1
#define __StaticRule_call_args , v0, v1
static inline StaticRule_ref_t StaticRule_create(flatbuffers_builder_t *B __StaticRule_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, StaticRule, StaticRule_file_identifier, StaticRule_type_identifier)

#define __DynamicProperty_formal_args , flatbuffers_string_ref_t v0, Property_vec_ref_t v1
#define __DynamicProperty_call_args , v0, v1
static inline DynamicProperty_ref_t DynamicProperty_create(flatbuffers_builder_t *B __DynamicProperty_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, DynamicProperty, DynamicProperty_file_identifier, DynamicProperty_type_identifier)

#define __DynamicRule_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_vec_ref_t v1, DynamicProperty_vec_ref_t v2
#define __DynamicRule_call_args , v0, v1, v2
static inline DynamicRule_ref_t DynamicRule_create(flatbuffers_builder_t *B __DynamicRule_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, DynamicRule, DynamicRule_file_identifier, DynamicRule_type_identifier)

#define __Styles_formal_args , StaticRule_vec_ref_t v0, DynamicRule_vec_ref_t v1
#define __Styles_call_args , v0, v1
static inline Styles_ref_t Styles_create(flatbuffers_builder_t *B __Styles_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Styles, Styles_file_identifier, Styles_type_identifier)

__flatbuffers_build_string_field(0, flatbuffers_, Property_key, Property)
__flatbuffers_build_string_field(1, flatbuffers_, Property_value, Property)

static inline Property_ref_t Property_create(flatbuffers_builder_t *B __Property_formal_args)
{
    if (Property_start(B)
        || Property_key_add(B, v0)
        || Property_value_add(B, v1)) {
        return 0;
    }
    return Property_end(B);
}

static Property_ref_t Property_clone(flatbuffers_builder_t *B, Property_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Property_start(B)
        || Property_key_pick(B, t)
        || Property_value_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Property_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, StaticRule_name, StaticRule)
/* vector has keyed elements */
__flatbuffers_build_table_vector_field(1, flatbuffers_, StaticRule_properties, Property, StaticRule)

static inline StaticRule_ref_t StaticRule_create(flatbuffers_builder_t *B __StaticRule_formal_args)
{
    if (StaticRule_start(B)
        || StaticRule_name_add(B, v0)
        || StaticRule_properties_add(B, v1)) {
        return 0;
    }
    return StaticRule_end(B);
}

static StaticRule_ref_t StaticRule_clone(flatbuffers_builder_t *B, StaticRule_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (StaticRule_start(B)
        || StaticRule_name_pick(B, t)
        || StaticRule_properties_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, StaticRule_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, DynamicProperty_name, DynamicProperty)
/* vector has keyed elements */
__flatbuffers_build_table_vector_field(1, flatbuffers_, DynamicProperty_properties, Property, DynamicProperty)

static inline DynamicProperty_ref_t DynamicProperty_create(flatbuffers_builder_t *B __DynamicProperty_formal_args)
{
    if (DynamicProperty_start(B)
        || DynamicProperty_name_add(B, v0)
        || DynamicProperty_properties_add(B, v1)) {
        return 0;
    }
    return DynamicProperty_end(B);
}

static DynamicProperty_ref_t DynamicProperty_clone(flatbuffers_builder_t *B, DynamicProperty_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (DynamicProperty_start(B)
        || DynamicProperty_name_pick(B, t)
        || DynamicProperty_properties_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, DynamicProperty_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, DynamicRule_prefix, DynamicRule)
__flatbuffers_build_string_vector_field(1, flatbuffers_, DynamicRule_values, DynamicRule)
/* vector has keyed elements */
__flatbuffers_build_table_vector_field(2, flatbuffers_, DynamicRule_properties, DynamicProperty, DynamicRule)

static inline DynamicRule_ref_t DynamicRule_create(flatbuffers_builder_t *B __DynamicRule_formal_args)
{
    if (DynamicRule_start(B)
        || DynamicRule_prefix_add(B, v0)
        || DynamicRule_values_add(B, v1)
        || DynamicRule_properties_add(B, v2)) {
        return 0;
    }
    return DynamicRule_end(B);
}

static DynamicRule_ref_t DynamicRule_clone(flatbuffers_builder_t *B, DynamicRule_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (DynamicRule_start(B)
        || DynamicRule_prefix_pick(B, t)
        || DynamicRule_values_pick(B, t)
        || DynamicRule_properties_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, DynamicRule_end(B));
}

/* vector has keyed elements */
__flatbuffers_build_table_vector_field(0, flatbuffers_, Styles_static_rules, StaticRule, Styles)
/* vector has keyed elements */
__flatbuffers_build_table_vector_field(1, flatbuffers_, Styles_dynamic_rules, DynamicRule, Styles)

static inline Styles_ref_t Styles_create(flatbuffers_builder_t *B __Styles_formal_args)
{
    if (Styles_start(B)
        || Styles_static_rules_add(B, v0)
        || Styles_dynamic_rules_add(B, v1)) {
        return 0;
    }
    return Styles_end(B);
}

static Styles_ref_t Styles_clone(flatbuffers_builder_t *B, Styles_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Styles_start(B)
        || Styles_static_rules_pick(B, t)
        || Styles_dynamic_rules_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Styles_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* STYLES_BUILDER_H */
