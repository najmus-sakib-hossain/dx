#ifndef OPTIONAL_SCALARS_TEST_BUILDER_H
#define OPTIONAL_SCALARS_TEST_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef OPTIONAL_SCALARS_TEST_READER_H
#include "optional_scalars_test_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

#define __optional_scalars_OptionalByte_formal_args , optional_scalars_OptionalByte_enum_t v0
#define __optional_scalars_OptionalByte_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, optional_scalars_OptionalByte, optional_scalars_OptionalByte_enum_t)
#define __optional_scalars_OptionalFactor_formal_args , optional_scalars_OptionalFactor_enum_t v0
#define __optional_scalars_OptionalFactor_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, optional_scalars_OptionalFactor, optional_scalars_OptionalFactor_enum_t)

static const flatbuffers_voffset_t __optional_scalars_ScalarStuff_required[] = { 0 };
typedef flatbuffers_ref_t optional_scalars_ScalarStuff_ref_t;
static optional_scalars_ScalarStuff_ref_t optional_scalars_ScalarStuff_clone(flatbuffers_builder_t *B, optional_scalars_ScalarStuff_table_t t);
__flatbuffers_build_table(flatbuffers_, optional_scalars_ScalarStuff, 43)

static const flatbuffers_voffset_t __optional_scalars_NestedTable_required[] = { 0 };
typedef flatbuffers_ref_t optional_scalars_NestedTable_ref_t;
static optional_scalars_NestedTable_ref_t optional_scalars_NestedTable_clone(flatbuffers_builder_t *B, optional_scalars_NestedTable_table_t t);
__flatbuffers_build_table(flatbuffers_, optional_scalars_NestedTable, 2)

#define __optional_scalars_ScalarStuff_formal_args ,\
  int8_t v0, int8_t v1, int8_t v2, uint8_t v3,\
  uint8_t v4, uint8_t v5, int16_t v6, int16_t v7,\
  int16_t v8, uint16_t v9, uint16_t v10, uint16_t v11,\
  int32_t v12, int32_t v13, int32_t v14, uint32_t v15,\
  uint32_t v16, uint32_t v17, int64_t v18, int64_t v19,\
  int64_t v20, uint64_t v21, uint64_t v22, uint64_t v23,\
  float v24, float v25, float v26, double v27,\
  double v28, double v29, flatbuffers_bool_t v30, flatbuffers_bool_t v31,\
  flatbuffers_bool_t v32, optional_scalars_OptionalByte_enum_t v33, optional_scalars_OptionalByte_enum_t v34, optional_scalars_OptionalByte_enum_t v35,\
  optional_scalars_OptionalFactor_enum_t v36, optional_scalars_OptionalFactor_enum_t v37, optional_scalars_OptionalFactor_enum_t v38, optional_scalars_OptionalFactor_enum_t v39,\
  optional_scalars_OptionalFactor_enum_t v40, optional_scalars_OptionalFactor_enum_t v41, optional_scalars_NestedTable_ref_t v42
#define __optional_scalars_ScalarStuff_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7,\
  v8, v9, v10, v11,\
  v12, v13, v14, v15,\
  v16, v17, v18, v19,\
  v20, v21, v22, v23,\
  v24, v25, v26, v27,\
  v28, v29, v30, v31,\
  v32, v33, v34, v35,\
  v36, v37, v38, v39,\
  v40, v41, v42
static inline optional_scalars_ScalarStuff_ref_t optional_scalars_ScalarStuff_create(flatbuffers_builder_t *B __optional_scalars_ScalarStuff_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, optional_scalars_ScalarStuff, optional_scalars_ScalarStuff_file_identifier, optional_scalars_ScalarStuff_type_identifier)

#define __optional_scalars_NestedTable_formal_args , uint64_t v0, uint64_t v1
#define __optional_scalars_NestedTable_call_args , v0, v1
static inline optional_scalars_NestedTable_ref_t optional_scalars_NestedTable_create(flatbuffers_builder_t *B __optional_scalars_NestedTable_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, optional_scalars_NestedTable, optional_scalars_NestedTable_file_identifier, optional_scalars_NestedTable_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, optional_scalars_ScalarStuff_just_i8, flatbuffers_int8, int8_t, 1, 1, INT8_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(1, flatbuffers_, optional_scalars_ScalarStuff_maybe_i8, flatbuffers_int8, int8_t, 1, 1, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(2, flatbuffers_, optional_scalars_ScalarStuff_default_i8, flatbuffers_int8, int8_t, 1, 1, INT8_C(42), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(3, flatbuffers_, optional_scalars_ScalarStuff_just_u8, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(4, flatbuffers_, optional_scalars_ScalarStuff_maybe_u8, flatbuffers_uint8, uint8_t, 1, 1, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(5, flatbuffers_, optional_scalars_ScalarStuff_default_u8, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(42), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(6, flatbuffers_, optional_scalars_ScalarStuff_just_i16, flatbuffers_int16, int16_t, 2, 2, INT16_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(7, flatbuffers_, optional_scalars_ScalarStuff_maybe_i16, flatbuffers_int16, int16_t, 2, 2, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(8, flatbuffers_, optional_scalars_ScalarStuff_default_i16, flatbuffers_int16, int16_t, 2, 2, INT16_C(42), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(9, flatbuffers_, optional_scalars_ScalarStuff_just_u16, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(10, flatbuffers_, optional_scalars_ScalarStuff_maybe_u16, flatbuffers_uint16, uint16_t, 2, 2, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(11, flatbuffers_, optional_scalars_ScalarStuff_default_u16, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(42), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(12, flatbuffers_, optional_scalars_ScalarStuff_just_i32, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(13, flatbuffers_, optional_scalars_ScalarStuff_maybe_i32, flatbuffers_int32, int32_t, 4, 4, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(14, flatbuffers_, optional_scalars_ScalarStuff_default_i32, flatbuffers_int32, int32_t, 4, 4, INT32_C(42), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(15, flatbuffers_, optional_scalars_ScalarStuff_just_u32, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(16, flatbuffers_, optional_scalars_ScalarStuff_maybe_u32, flatbuffers_uint32, uint32_t, 4, 4, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(17, flatbuffers_, optional_scalars_ScalarStuff_default_u32, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(42), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(18, flatbuffers_, optional_scalars_ScalarStuff_just_i64, flatbuffers_int64, int64_t, 8, 8, INT64_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(19, flatbuffers_, optional_scalars_ScalarStuff_maybe_i64, flatbuffers_int64, int64_t, 8, 8, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(20, flatbuffers_, optional_scalars_ScalarStuff_default_i64, flatbuffers_int64, int64_t, 8, 8, INT64_C(42), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(21, flatbuffers_, optional_scalars_ScalarStuff_just_u64, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(22, flatbuffers_, optional_scalars_ScalarStuff_maybe_u64, flatbuffers_uint64, uint64_t, 8, 8, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(23, flatbuffers_, optional_scalars_ScalarStuff_default_u64, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(42), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(24, flatbuffers_, optional_scalars_ScalarStuff_just_f32, flatbuffers_float, float, 4, 4, 0.00000000f, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(25, flatbuffers_, optional_scalars_ScalarStuff_maybe_f32, flatbuffers_float, float, 4, 4, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(26, flatbuffers_, optional_scalars_ScalarStuff_default_f32, flatbuffers_float, float, 4, 4, 42.0000000f, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(27, flatbuffers_, optional_scalars_ScalarStuff_just_f64, flatbuffers_double, double, 8, 8, 0.0000000000000000, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(28, flatbuffers_, optional_scalars_ScalarStuff_maybe_f64, flatbuffers_double, double, 8, 8, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(29, flatbuffers_, optional_scalars_ScalarStuff_default_f64, flatbuffers_double, double, 8, 8, 42.000000000000000, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(30, flatbuffers_, optional_scalars_ScalarStuff_just_bool, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(31, flatbuffers_, optional_scalars_ScalarStuff_maybe_bool, flatbuffers_bool, flatbuffers_bool_t, 1, 1, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(32, flatbuffers_, optional_scalars_ScalarStuff_default_bool, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(1), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(33, flatbuffers_, optional_scalars_ScalarStuff_just_enum, optional_scalars_OptionalByte, optional_scalars_OptionalByte_enum_t, 1, 1, INT8_C(0), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(34, flatbuffers_, optional_scalars_ScalarStuff_maybe_enum, optional_scalars_OptionalByte, optional_scalars_OptionalByte_enum_t, 1, 1, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(35, flatbuffers_, optional_scalars_ScalarStuff_default_enum, optional_scalars_OptionalByte, optional_scalars_OptionalByte_enum_t, 1, 1, INT8_C(1), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(36, flatbuffers_, optional_scalars_ScalarStuff_just_xfactor, optional_scalars_OptionalFactor, optional_scalars_OptionalFactor_enum_t, 1, 1, INT8_C(1), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(37, flatbuffers_, optional_scalars_ScalarStuff_maybe_xfactor, optional_scalars_OptionalFactor, optional_scalars_OptionalFactor_enum_t, 1, 1, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(38, flatbuffers_, optional_scalars_ScalarStuff_default_xfactor, optional_scalars_OptionalFactor, optional_scalars_OptionalFactor_enum_t, 1, 1, INT8_C(2), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(39, flatbuffers_, optional_scalars_ScalarStuff_just_yfactor, optional_scalars_OptionalFactor, optional_scalars_OptionalFactor_enum_t, 1, 1, INT8_C(1), optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_optional_field(40, flatbuffers_, optional_scalars_ScalarStuff_maybe_yfactor, optional_scalars_OptionalFactor, optional_scalars_OptionalFactor_enum_t, 1, 1, optional_scalars_ScalarStuff)
__flatbuffers_build_scalar_field(41, flatbuffers_, optional_scalars_ScalarStuff_default_yfactor, optional_scalars_OptionalFactor, optional_scalars_OptionalFactor_enum_t, 1, 1, INT8_C(2), optional_scalars_ScalarStuff)
__flatbuffers_build_table_field(42, flatbuffers_, optional_scalars_ScalarStuff_nested_table, optional_scalars_NestedTable, optional_scalars_ScalarStuff)

static inline optional_scalars_ScalarStuff_ref_t optional_scalars_ScalarStuff_create(flatbuffers_builder_t *B __optional_scalars_ScalarStuff_formal_args)
{
    if (optional_scalars_ScalarStuff_start(B)
        || optional_scalars_ScalarStuff_just_i64_add(B, v18)
        || optional_scalars_ScalarStuff_maybe_i64_add(B, v19)
        || optional_scalars_ScalarStuff_default_i64_add(B, v20)
        || optional_scalars_ScalarStuff_just_u64_add(B, v21)
        || optional_scalars_ScalarStuff_maybe_u64_add(B, v22)
        || optional_scalars_ScalarStuff_default_u64_add(B, v23)
        || optional_scalars_ScalarStuff_just_f64_add(B, v27)
        || optional_scalars_ScalarStuff_maybe_f64_add(B, v28)
        || optional_scalars_ScalarStuff_default_f64_add(B, v29)
        || optional_scalars_ScalarStuff_just_i32_add(B, v12)
        || optional_scalars_ScalarStuff_maybe_i32_add(B, v13)
        || optional_scalars_ScalarStuff_default_i32_add(B, v14)
        || optional_scalars_ScalarStuff_just_u32_add(B, v15)
        || optional_scalars_ScalarStuff_maybe_u32_add(B, v16)
        || optional_scalars_ScalarStuff_default_u32_add(B, v17)
        || optional_scalars_ScalarStuff_just_f32_add(B, v24)
        || optional_scalars_ScalarStuff_maybe_f32_add(B, v25)
        || optional_scalars_ScalarStuff_default_f32_add(B, v26)
        || optional_scalars_ScalarStuff_nested_table_add(B, v42)
        || optional_scalars_ScalarStuff_just_i16_add(B, v6)
        || optional_scalars_ScalarStuff_maybe_i16_add(B, v7)
        || optional_scalars_ScalarStuff_default_i16_add(B, v8)
        || optional_scalars_ScalarStuff_just_u16_add(B, v9)
        || optional_scalars_ScalarStuff_maybe_u16_add(B, v10)
        || optional_scalars_ScalarStuff_default_u16_add(B, v11)
        || optional_scalars_ScalarStuff_just_i8_add(B, v0)
        || optional_scalars_ScalarStuff_maybe_i8_add(B, v1)
        || optional_scalars_ScalarStuff_default_i8_add(B, v2)
        || optional_scalars_ScalarStuff_just_u8_add(B, v3)
        || optional_scalars_ScalarStuff_maybe_u8_add(B, v4)
        || optional_scalars_ScalarStuff_default_u8_add(B, v5)
        || optional_scalars_ScalarStuff_just_bool_add(B, v30)
        || optional_scalars_ScalarStuff_maybe_bool_add(B, v31)
        || optional_scalars_ScalarStuff_default_bool_add(B, v32)
        || optional_scalars_ScalarStuff_just_enum_add(B, v33)
        || optional_scalars_ScalarStuff_maybe_enum_add(B, v34)
        || optional_scalars_ScalarStuff_default_enum_add(B, v35)
        || optional_scalars_ScalarStuff_just_xfactor_add(B, v36)
        || optional_scalars_ScalarStuff_maybe_xfactor_add(B, v37)
        || optional_scalars_ScalarStuff_default_xfactor_add(B, v38)
        || optional_scalars_ScalarStuff_just_yfactor_add(B, v39)
        || optional_scalars_ScalarStuff_maybe_yfactor_add(B, v40)
        || optional_scalars_ScalarStuff_default_yfactor_add(B, v41)) {
        return 0;
    }
    return optional_scalars_ScalarStuff_end(B);
}

static optional_scalars_ScalarStuff_ref_t optional_scalars_ScalarStuff_clone(flatbuffers_builder_t *B, optional_scalars_ScalarStuff_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (optional_scalars_ScalarStuff_start(B)
        || optional_scalars_ScalarStuff_just_i64_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_i64_pick(B, t)
        || optional_scalars_ScalarStuff_default_i64_pick(B, t)
        || optional_scalars_ScalarStuff_just_u64_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_u64_pick(B, t)
        || optional_scalars_ScalarStuff_default_u64_pick(B, t)
        || optional_scalars_ScalarStuff_just_f64_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_f64_pick(B, t)
        || optional_scalars_ScalarStuff_default_f64_pick(B, t)
        || optional_scalars_ScalarStuff_just_i32_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_i32_pick(B, t)
        || optional_scalars_ScalarStuff_default_i32_pick(B, t)
        || optional_scalars_ScalarStuff_just_u32_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_u32_pick(B, t)
        || optional_scalars_ScalarStuff_default_u32_pick(B, t)
        || optional_scalars_ScalarStuff_just_f32_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_f32_pick(B, t)
        || optional_scalars_ScalarStuff_default_f32_pick(B, t)
        || optional_scalars_ScalarStuff_nested_table_pick(B, t)
        || optional_scalars_ScalarStuff_just_i16_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_i16_pick(B, t)
        || optional_scalars_ScalarStuff_default_i16_pick(B, t)
        || optional_scalars_ScalarStuff_just_u16_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_u16_pick(B, t)
        || optional_scalars_ScalarStuff_default_u16_pick(B, t)
        || optional_scalars_ScalarStuff_just_i8_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_i8_pick(B, t)
        || optional_scalars_ScalarStuff_default_i8_pick(B, t)
        || optional_scalars_ScalarStuff_just_u8_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_u8_pick(B, t)
        || optional_scalars_ScalarStuff_default_u8_pick(B, t)
        || optional_scalars_ScalarStuff_just_bool_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_bool_pick(B, t)
        || optional_scalars_ScalarStuff_default_bool_pick(B, t)
        || optional_scalars_ScalarStuff_just_enum_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_enum_pick(B, t)
        || optional_scalars_ScalarStuff_default_enum_pick(B, t)
        || optional_scalars_ScalarStuff_just_xfactor_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_xfactor_pick(B, t)
        || optional_scalars_ScalarStuff_default_xfactor_pick(B, t)
        || optional_scalars_ScalarStuff_just_yfactor_pick(B, t)
        || optional_scalars_ScalarStuff_maybe_yfactor_pick(B, t)
        || optional_scalars_ScalarStuff_default_yfactor_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, optional_scalars_ScalarStuff_end(B));
}

__flatbuffers_build_scalar_optional_field(0, flatbuffers_, optional_scalars_NestedTable_u64_0, flatbuffers_uint64, uint64_t, 8, 8, optional_scalars_NestedTable)
__flatbuffers_build_scalar_optional_field(1, flatbuffers_, optional_scalars_NestedTable_u64_1, flatbuffers_uint64, uint64_t, 8, 8, optional_scalars_NestedTable)

static inline optional_scalars_NestedTable_ref_t optional_scalars_NestedTable_create(flatbuffers_builder_t *B __optional_scalars_NestedTable_formal_args)
{
    if (optional_scalars_NestedTable_start(B)
        || optional_scalars_NestedTable_u64_0_add(B, v0)
        || optional_scalars_NestedTable_u64_1_add(B, v1)) {
        return 0;
    }
    return optional_scalars_NestedTable_end(B);
}

static optional_scalars_NestedTable_ref_t optional_scalars_NestedTable_clone(flatbuffers_builder_t *B, optional_scalars_NestedTable_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (optional_scalars_NestedTable_start(B)
        || optional_scalars_NestedTable_u64_0_pick(B, t)
        || optional_scalars_NestedTable_u64_1_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, optional_scalars_NestedTable_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* OPTIONAL_SCALARS_TEST_BUILDER_H */
