#ifndef EMIT_TEST_READER_H
#define EMIT_TEST_READER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif


typedef const struct main_table *main_table_t;
typedef struct main_table *main_mutable_table_t;
typedef const flatbuffers_uoffset_t *main_vec_t;
typedef flatbuffers_uoffset_t *main_mutable_vec_t;
#ifndef main_file_identifier
#define main_file_identifier 0
#endif
/* deprecated, use main_file_identifier */
#ifndef main_identifier
#define main_identifier 0
#endif
#define main_type_hash ((flatbuffers_thash_t)0xea90e208)
#define main_type_identifier "\x08\xe2\x90\xea"
#ifndef main_file_extension
#define main_file_extension "bin"
#endif



struct main_table { uint8_t unused__; };

static inline size_t main_vec_len(main_vec_t vec)
__flatbuffers_vec_len(vec)
static inline main_table_t main_vec_at(main_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(main_table_t, vec, i, 0)
__flatbuffers_table_as_root(main)

__flatbuffers_define_scalar_field(0, main, time, flatbuffers_int64, int64_t, INT64_C(0))
__flatbuffers_define_scalar_field(1, main, device, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_vector_field(2, main, samples, flatbuffers_float_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* EMIT_TEST_READER_H */
