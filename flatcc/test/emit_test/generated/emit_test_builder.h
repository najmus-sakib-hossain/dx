#ifndef EMIT_TEST_BUILDER_H
#define EMIT_TEST_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef EMIT_TEST_READER_H
#include "emit_test_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

static const flatbuffers_voffset_t __main_required[] = { 0 };
typedef flatbuffers_ref_t main_ref_t;
static main_ref_t main_clone(flatbuffers_builder_t *B, main_table_t t);
__flatbuffers_build_table(flatbuffers_, main, 3)

#define __main_formal_args , int64_t v0, uint8_t v1, flatbuffers_float_vec_ref_t v2
#define __main_call_args , v0, v1, v2
static inline main_ref_t main_create(flatbuffers_builder_t *B __main_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, main, main_file_identifier, main_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, main_time, flatbuffers_int64, int64_t, 8, 8, INT64_C(0), main)
__flatbuffers_build_scalar_field(1, flatbuffers_, main_device, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(0), main)
__flatbuffers_build_vector_field(2, flatbuffers_, main_samples, flatbuffers_float, float, main)

static inline main_ref_t main_create(flatbuffers_builder_t *B __main_formal_args)
{
    if (main_start(B)
        || main_time_add(B, v0)
        || main_samples_add(B, v2)
        || main_device_add(B, v1)) {
        return 0;
    }
    return main_end(B);
}

static main_ref_t main_clone(flatbuffers_builder_t *B, main_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (main_start(B)
        || main_time_pick(B, t)
        || main_samples_pick(B, t)
        || main_device_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, main_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* EMIT_TEST_BUILDER_H */
