#ifndef DOUBLEVEC_TEST_READER_H
#define DOUBLEVEC_TEST_READER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif


typedef const struct DoubleVec_table *DoubleVec_table_t;
typedef struct DoubleVec_table *DoubleVec_mutable_table_t;
typedef const flatbuffers_uoffset_t *DoubleVec_vec_t;
typedef flatbuffers_uoffset_t *DoubleVec_mutable_vec_t;
#ifndef DoubleVec_file_identifier
#define DoubleVec_file_identifier 0
#endif
/* deprecated, use DoubleVec_file_identifier */
#ifndef DoubleVec_identifier
#define DoubleVec_identifier 0
#endif
#define DoubleVec_type_hash ((flatbuffers_thash_t)0x3205cdca)
#define DoubleVec_type_identifier "\xca\xcd\x05\x32"
#ifndef DoubleVec_file_extension
#define DoubleVec_file_extension "bin"
#endif



struct DoubleVec_table { uint8_t unused__; };

static inline size_t DoubleVec_vec_len(DoubleVec_vec_t vec)
__flatbuffers_vec_len(vec)
static inline DoubleVec_table_t DoubleVec_vec_at(DoubleVec_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(DoubleVec_table_t, vec, i, 0)
__flatbuffers_table_as_root(DoubleVec)

__flatbuffers_define_vector_field(0, DoubleVec, a, flatbuffers_double_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* DOUBLEVEC_TEST_READER_H */
