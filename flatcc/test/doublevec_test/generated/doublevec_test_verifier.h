#ifndef DOUBLEVEC_TEST_VERIFIER_H
#define DOUBLEVEC_TEST_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef DOUBLEVEC_TEST_READER_H
#include "doublevec_test_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int DoubleVec_verify_table(flatcc_table_verifier_descriptor_t *td);

static int DoubleVec_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 8, 8, INT64_C(536870911)) /* a */)) return ret;
    return flatcc_verify_ok;
}

static inline int DoubleVec_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, DoubleVec_identifier, &DoubleVec_verify_table);
}

static inline int DoubleVec_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, DoubleVec_identifier, &DoubleVec_verify_table);
}

static inline int DoubleVec_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, DoubleVec_type_identifier, &DoubleVec_verify_table);
}

static inline int DoubleVec_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, DoubleVec_type_identifier, &DoubleVec_verify_table);
}

static inline int DoubleVec_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &DoubleVec_verify_table);
}

static inline int DoubleVec_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &DoubleVec_verify_table);
}

static inline int DoubleVec_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &DoubleVec_verify_table);
}

static inline int DoubleVec_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &DoubleVec_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* DOUBLEVEC_TEST_VERIFIER_H */
